import base64
import aiohttp

from app.core import settings

class GPTVisionClient:
    """
    Client for interacting with GPT-4 Vision API to analyze images.
    """

    def __init__(self):
        self.api_key = settings.GPT_API_KEY
        self.api_url = "https://api.openai.com/v1/chat/completions"

    async def analyze_image(self, image_bytes: bytes, prompt: str) -> str:
        """
        Send image + prompt to GPT-4V and get description.

        Args:
            image_bytes (bytes): The uploaded image content
            prompt (str): The instruction prompt

        Returns:
            str: Description generated by GPT-4V
        """
        encoded_image = base64.b64encode(image_bytes).decode("utf-8")

        payload = {
            "model": "gpt-4o",
            "messages": [
                {
                    "role": "user",
                    "content": [
                        {"type": "text", "text": prompt},
                        {
                            "type": "image_url",
                            "image_url": {
                                "url": f"data:image/jpeg;base64,{encoded_image}"
                            }
                        }
                    ]
                }
            ],
            "max_tokens": 500
        }

        headers = {
            "Authorization": f"Bearer {self.api_key}",
            "Content-Type": "application/json"
        }

        print(f"{headers = }")

        async with aiohttp.ClientSession() as session:
            async with session.post(self.api_url, headers=headers, json=payload) as response:
                if response.status != 200:
                    text = await response.text()
                    raise RuntimeError(f"GPT-4 Vision API error: {response.status} - {text}")

                data = await response.json()
                try:
                    return data["choices"][0]["message"]["content"]
                except (KeyError, IndexError):
                    raise RuntimeError("Malformed response from GPT-4 Vision API")